---
title: "Mapas_R_Alesso"
author: "Rodriguez, I"
execute:
  echo: false
editor: visual
output: true
warning: false
editor_options: 
  chunk_output_type: inline
format:
  html:
    code-fold: false
    code-tools: false
---

```{r}
knitr::opts_chunk$set(warning = FALSE, message = FALSE) 
```

## Load packages

```{r}
library(rpart)
library(rpart.plot)
library(rsample)
library(usethis)
library(devtools)
library(tidyverse)
library(dplyr)
library(MLmetrics)
```

```{r}
pacman::p_install_gh("AgRoMeteorologiaINTA/agromet")
pacman::p_load(
    tidyverse, gridExtra, patchwork,
    sp, sf,
    ggspatial, tmap, leaflet, mapview,
    agromet
)
```
Preparando unos datos para probar...

```{r}
data("meuse")

coordinates(meuse) <- ~x+y

proj4string(meuse) <- CRS("+init=epsg:28992")

# Datos raster

data("meuse.grid")

coordinates(meuse.grid) = ~x+y
proj4string(meuse.grid) <- CRS("+init=epsg:28992")
gridded(meuse.grid) = TRUE
```

Algo basico con sp: :plot()...
```{r}
labs <- cut(meuse$zinc, 5) |> unique() # "|>" creo q es el signo PIPPE
cols <- palette.colors(nlevels(labs)) #crea una paleta de colores

plot(meuse, axes = T, col = cols, pch = 1) # axes= T, sino no pone nombre de ejes.

legend("topleft", legend = labs, pch=1, col = cols)# es la leyenda q aparce en el cuadrito. Pero no se q es.
```

# Lo mismo con spplot()
```{r}
spplot(meuse, zcol= "zinc", scales= list (draw = T))
```

## SP ALGO mejor
```{r}
spplot(meuse, zcol= "zinc",
       scales= list (draw = T),
       cuts =seq (0,2000, by= 250),# aca hace escala especifica
       key.space = "right",# lo pone a la derecha
       ylab = "Northing (m)",
       xlab = "Easting (m)") 
```

## Más de una variable

```{r}
spplot(meuse, zcol= c("zinc","lead"), #acá le pone las 2 variables
       scales= list (draw = T),
       ylab = "Northing (m)",
       xlab = "Easting (m)",
       key.space = "botton") 
```

## Ploteando Rasters
```{r}
p1<- spplot(meuse.grid, zcol= "dist", #lo unico que cambio "meuse grid"
            scales= list (draw = T),# el map muestra algo como dist del Rio a la costa
       ylab = "Northing (m)",
       xlab = "Easting (m)",
       at = seq (0, 1, by = 0.05)
)
 
p1           
```

## AHORA FUNCIÓN "sf", MÁS MODERNA
```{r}
meuse_sf <- st_as_sf(meuse)

plot(meuse_sf)
```

## ggplot2 + sf + ggspatial

```{r}
ggplot(meuse_sf)+
    aes(color = zinc)+
    geom_sf()+
    coord_sf(datum= NULL)
```

## agrego un mapa gratuito de fondo

```{r}
ggplot(meuse_sf)+
    annotation_map_tile("osm", zoomin= 0)+
    aes(color = zinc)+
    geom_sf()+
    coord_sf()
```

## Le agrego Facet
```{r}
meuse_sf %>% 
    pivot_longer(cadmium:zinc) %>% 
    ggplot()+
    annotation_map_tile("osm", zoomin= 0)+
    aes(color = value)+
    geom_sf()+
    facet_wrap(~name)# aca!
```

# TMAP
```{r}
tmap_mode("plot")

# Poligonos usando Agromet
provs<- mapa_provincias()
dptos<- mapa_departamentos()

mapa_base<- tm_shape(provs)+
    tm_borders()# clave para q no ponga rellenos a "provincias"

mapa_base
```

# Agregando los estaciones con tm_dots ()
```{r}
estaciones <- metadatos_nh() |>
st_as_sf(coords = c("lon", "lat")) |>
st_set_crs(4326)
colores <- c(INTA= "blue", SMN = "red")

mapa_est_org<- tm_shape(estaciones) +
tm_dots("organismo", palette = colores) +
tm_layout(legend.outside = T)


mapa_base + mapa_est_org
```

# Tamaño de los puntos en fción de la altura de Est. Met
```{r}
mapa_est_alt <- tm_shape(estaciones)+
    tm_bubbles("altura")+
    tm_layout(legend.outside = T)

mapa_base+mapa_est_alt
```

# TMAP with Facet
```{r}
provincias <- c("Buenos Aires”, “Santa Fe", "Cordoba") 

provs |> filter(name %in% provincias) |>
tm_shape() +
tm_borders() +
tm_facets("name")+
estaciones |> filter(estaciones,provincia %in% provincias) |>
tm_shape() +
tm_dots("organisno", size = 8.25, palette = colores) +
tm_facets("provincia", ncol = 1)

```

## Agregar elementos adicionales

```{r}
mapa_base +
    mapa_est_org +
    tm_graticules() +
    tm_compass(#le agrega el Norte
        type = "arrow", size = 2,
        position = c("left","top")
    )+
    tm_scale_bar()+# para escale, metros en escala REAL
    tm_layout(
        main.title = "Estnaciones NH",
        main.title.size = 1
    )
```

## Hacer una mapa y que sale un mapita de adentro

```{r}
# Mapa principal
mapa_bsas <- provs |> dplyr::filter(name == "Buenos Aires") |>
  tm_shape() +
  tm_borders() +
  estaciones |> filter(provincia == "Buenos Aires") |>
  tm_shape() +
  tm_dots("organismo", size = 0.85, palette = colores) +
  tm_text("estacion", size = 0.75, ymod = 0.5, remove.overlap = TRUE) +
  tm_layout(frame = FALSE)

#Minimapa
provs <- provs %>% mutate(foco = ifelse(name == "Buenos Aires","gray","white")) # con este codigo la prov de Bs As aparece en gris. if is "Bs As"= GREY. if not = "White"
mapa_arg <- tm_shape(provs) +
    tm_polygons("foco")


# Imprimir mapa principal y submapa
mapa_bsas
vp <- grid::viewport(x= 0.9, y= 0.2, width= 0.3, height= 0.3)
print(mapa_arg, vp=vp)
```
###------ FIN --------- # LUEGO SIGUEN MAPAS DINÁMICOS################################
